name: deploy
on:
  push:
    branches:
      - main
jobs:
  create-artifacts:
    name: Create Artifacts
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_DATABASE: testing
          MYSQL_PASSWORD: password
          MYSQL_USER: tester
          MYSQL_ROOT_PASSWORD: root
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
      - uses: actions/checkout@v3
      - uses: php-actions/composer@v6
        with:
          php_version: "8.2"
          php_extensions: exif
      - name: PHPUnit tests
        uses: php-actions/phpunit@v3
        env:
          DB_TESTING_CONNECTION: mysql_testing
          DB_TESTING_HOST: 127.0.0.1
          DB_TESTING_PORT: 3306
          DB_TESTING_DATABASE: testing
          DB_TESTING_USERNAME: tester
          DB_TESTING_PASSWORD: password
        with:
          configuration: "phpunit.xml"
          coverage_html: "storage/framework/testing/coverage"
          php_extensions: xdebug pdo_mysql

      - name: Make code coverage badge
        uses: timkrase/phpunit-coverage-badge@v1.2.1
        with:
          coverage_badge_path: output/coverage.svg
          report_type: 'html'
          report: 'storage/framework/testing/coverage/index.html'
          push_badge: true
      - name: Git push to image-data branch
        uses: peaceiris/actions-gh-pages@v3
        with:
          publish_dir: ./output
          publish_branch: image-data
          github_token: ${{ secrets.GITHUB_TOKEN }}
          user_name: 'github-actions[bot]'
          user_email: 'github-actions[bot]@users.noreply.github.com'
      - uses: actions/checkout@v2
      - name: Build Frontend
        run: |
          npm ci
          npm run prod
      - name: Configure PHP
        uses: shivammathur/setup-php@master
        with:
          php-version: '8.2'
          extensions: zip, pdo_mysql, gd, json, exif
      - name: Install Composer
        run: composer install --no-dev --no-interaction --prefer-dist
      - name: Upload
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          source: ".,!node_modules,!tests,!.git,!storage,!.github,!.docker.,!.gitignore"
          target: /home/${{ secrets.USERNAME }}/prostocode.com/www/releases/${{ github.sha }}
      - name: Release setup
        uses: appleboy/ssh-action@master
        env:
          RELEASE_PATH: /home/${{ secrets.USERNAME }}/prostocode.com/www/releases/${{ github.sha }}
          ACTIVE_RELEASE_PATH: /home/${{ secrets.USERNAME }}/prostocode.com/www/current
          STORAGE_PATH: /home/${{ secrets.USERNAME }}/prostocode.com/www/storage
          BASE_PATH: /home/${{ secrets.USERNAME }}/prostocode.com/www
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          timeout: 120s
          envs: RELEASE_PATH,ACTIVE_RELEASE_PATH,STORAGE_PATH,BASE_PATH
          script: |
            ln -s -f ${BASE_PATH}/.env $RELEASE_PATH
            ln -s -f ${BASE_PATH}/storage $RELEASE_PATH
            ln -s -n -f $RELEASE_PATH $ACTIVE_RELEASE_PATH
            cd $BASE_PATH/releases && ls -t -1 | tail -n +6 | xargs rm -rf
            cd $RELEASE_PATH && php artisan migrate --force && php artisan config:cache && php artisan storage:link && php artisan sitemap:generate
